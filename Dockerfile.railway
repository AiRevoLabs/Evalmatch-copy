# Railway Dockerfile - Nginx + Express in single container
FROM node:20-alpine AS builder

# Install build dependencies
RUN apk add --no-cache python3 make g++

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install ALL dependencies (including dev deps for build)
RUN npm ci && npm cache clean --force

# Copy source code
COPY . .

# Build the client
RUN npm run build:client

# Build the server
RUN npm run build:server

# Production stage with nginx
FROM nginx:alpine

# Install Node.js for the Express server
RUN apk add --no-cache nodejs npm supervisor

# Copy nginx configuration
COPY nginx/default.conf /etc/nginx/conf.d/default.conf

# Copy built frontend to nginx html directory
COPY --from=builder /app/dist/public /usr/share/nginx/html

# Set up app directory
WORKDIR /app

# Copy built server and package.json
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package.json ./package.json

# Install only production dependencies in final stage
RUN npm ci --only=production && npm cache clean --force

# Create supervisor configuration
RUN echo '[supervisord]' > /etc/supervisor/conf.d/supervisord.conf && \
    echo 'nodaemon=true' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'user=root' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo '' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo '[program:nginx]' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'command=nginx -g "daemon off;"' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'autostart=true' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'autorestart=true' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'stdout_logfile=/var/log/nginx.log' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'stderr_logfile=/var/log/nginx.log' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo '' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo '[program:express]' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'command=node ./dist/index.js' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'directory=/app' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'autostart=true' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'autorestart=true' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'stdout_logfile=/var/log/express.log' >> /etc/supervisor/conf.d/supervisord.conf && \
    echo 'stderr_logfile=/var/log/express.log' >> /etc/supervisor/conf.d/supervisord.conf

# Install supervisor
RUN apk add --no-cache supervisor

# Create startup script
RUN echo '#!/bin/sh' > /start.sh && \
    echo 'echo "Starting Railway deployment with nginx + Express..."' >> /start.sh && \
    echo 'supervisord -c /etc/supervisor/conf.d/supervisord.conf' >> /start.sh && \
    chmod +x /start.sh

# Expose port 80 (nginx)
EXPOSE 80

# Start both nginx and Express with supervisor
CMD ["/start.sh"]